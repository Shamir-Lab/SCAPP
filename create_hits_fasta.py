# read in the list of hit cycles (generated by find_plasmid_genes.py) and the recycler output fasta
# output fasta for the hit cycles to use in BLAST

import argparse

def parse_user_input():
    parser = argparse.ArgumentParser(
        description=
        'create_hits_fasta creates a fasta file of the plasmids (found by Recycler2) \
         that have plasmid gene hits (found with the find_plasmid_gene_matches.py sript)'
        )
    parser.add_argument('-f','--fasta',
     help='input fasta file',
     required=True, type=str
     )
    parser.add_argument('-ht', '--hits',
      help='hits file - list of plasmids with gene hits (created by find_plasmid_gene_matches.py)',
      required=True, type=str
     )
    parser.add_argument('-o','--outfile',
     help='path to output filtered fasta file',
     required=True, type=str
     )

    return parser.parse_args()


def create_hits(infile, hitsfile, outfile):
    hit_set = set()
    with open(hitsfile) as f:
      for line in f:
        hit_set.add(line.strip())

    with open(infile) as f, open(outfile,'w+') as o:
      hit_seq = False
      for line in f:
        if line[0] == ">":
          header = line[1:].strip()
          if header in hit_set:
            hit_seq = True
            o.write(line)
          else:
            hit_seq = False
        else:
          if hit_seq: o.write(line)

def main():
    args = parse_user_input()
    infile = args.fasta
    hitsfile = args.hits
    outfile = args.outfile

    create_hits(infile,hitsfile,outfile)


if __name__=='__main__':
    main()
